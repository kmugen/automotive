/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "pid.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define SIZE_OF_INPUTS      7
#define IDX_ERR             0
#define IDX_ERR_PREV        1
#define IDX_INT_ERR_PREV    2
#define IDX_K_P             3
#define IDX_K_I             4
#define IDX_K_D             5
#define IDX_T_S             6

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/
float32 pidController(float32 *pid_inputs)
{
    float32 err = pid_inputs[IDX_ERR];
    float32 integral_err = pid_inputs[IDX_INT_ERR_PREV] + err * pid_inputs[IDX_T_S];
    float32 derivative_err = (err - pid_inputs[IDX_ERR_PREV]) / pid_inputs[IDX_T_S];

    pid_inputs[IDX_INT_ERR_PREV] = integral_err;
    pid_inputs[IDX_ERR_PREV] = err;

    return ((err * pid_inputs[IDX_K_P]) + (integral_err * pid_inputs[IDX_K_I]) + (derivative_err * pid_inputs[IDX_K_D]));
}
